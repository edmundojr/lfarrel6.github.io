{"version":3,"sources":["components/wrappedbootstrap/maxheightcontainer.js","components/wrappedbootstrap/maxheightrow.js","components/neumorphic/neumorphic.styled.js","components/background/background.styled.js","components/neusmiley/neusmiley.styled.js","components/topnav/topnav.styled.js","components/topnav/topnav.js","components/header/header.styled.js","components/header/header.js","components/subtitle/subtitle.styled.js","components/subtitle/subtitle.js","components/subtlelink/subtlelink.styled.js","components/paddeddiv/paddeddiv.styled.js","components/fab/fab.styled.js","components/fab/fab.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["styled","Container","MaxHeightFluidContainer","className","children","rest","fluid","theme","primary","Row","div","bgLight","height","width","shadowLight","shadowDark","Eye","p","dark","LeftEye","RightEye","SmileyEyes","SmileBase","SmileCorner","SmileCornerRight","Smile","SmileyFace","StickyTopNav","nav","NavHeader","h4","text","TopNav","PaddedHeader","h1","Header","SpacedSubtitle","h6","Subtitle","SubtleLink","a","PaddedDiv","ThemeToggle","inversePrimary","Moon","Sun","FAB","darkMode","light","App","useState","setDarkMode","statefulTheme","setTheme","useEffect","target","href","onClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.df2d8538.chunk.js","sourcesContent":["import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst FluidContainer = ({ className, children, ...rest }) => (\n\t<Container fluid className={className} {...rest}>\n\t\t{children}\n\t</Container>\n);\n\nexport const MaxHeightContainer = styled(Container)`\n\theight: 100%;\n`;\n\nexport const MaxHeightFluidContainer = styled(FluidContainer)`\n\theight: 100vh;\n\tbackground-color: ${({ theme }) => theme.primary};\n\tdisplay: flex;\n\talign-items: center;\n\ttransition: background-color linear 1s;\n`;\n","import { Row } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nexport const MaxHeightRow = styled(Row)`\n  min-height: 100vh;\n`;\n","import styled from 'styled-components';\n\nexport const NeumorphicCircle = styled.div`\n\tdisplay: inline-block;\n\tborder-radius: 50%;\n\tbackground-color: ${({ theme }) => theme.bgLight};\n\theight: ${({ height }) => (height ? height : '50px')};\n\twidth: ${({ width }) => (width ? width : '50px')};\n\tbox-shadow: -2px -2px 4px 4px ${({ theme }) => theme.shadowLight},\n\t\t2px 2px 4px 4px ${({ theme }) => theme.shadowDark};\n`;\n","import styled from \"styled-components\";\n\nexport const StyledBackground = styled.div`\n  z-index: -1;\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import styled from 'styled-components';\nimport React from 'react';\n\nexport const Eye = styled.p`\n\twidth: 50px;\n\theight: 80px;\n\tbackground: ${({ theme }) => theme.dark};\n\tborder-radius: 100px/160px;\n\t-webkit-border-radius: 100px 160px;\n\t-moz-border-radius: 100px/160px;\n\tposition: absolute;\n\ttop: 40px;\n\tbox-shadow: 0 2px 0 rgba(255, 255, 255, 0.8);\n\t-webkit-box-shadow: 0 2px 0 rgba(255, 255, 255, 0.8);\n\t-moz-box-shadow: 0 2px 0 rgba(255, 255, 255, 0.8);\n`;\n\nexport const LeftEye = styled(Eye)`\n\tleft: 75px;\n`;\n\nexport const RightEye = styled(Eye)`\n\tright: 75px;\n`;\n\nexport const SmileyEyes = (\n\t<>\n\t\t<LeftEye />\n\t\t<RightEye />\n\t</>\n);\n\nexport const SmileBase = styled.div`\n\twidth: 200px;\n\theight: 70px;\n\tborder: 10px solid ${({ theme }) => theme.dark};\n\tborder-top: 0;\n\tbackground: rgba(0, 0, 0, 0);\n\t-moz-border-radius: 0 0 120px 120px / 0 0 90px 90px;\n\t-webkit-border-radius: 0 0 120px 120px 0 0 90px 90px;\n\tborder-radius: 0 0 120px 120px / 0 0 90px 90px;\n\tposition: absolute;\n\tbottom: 50px;\n\tleft: 38px;\n\tbox-shadow: 0 2px 0 rgba(255, 255, 255, 0.8);\n\t-webkit-box-shadow: 0 2px 0 rgba(255, 255, 255, 0.8);\n\t-moz-box-shadow: 0 2px 0 rgba(255, 255, 255, 0.8);\n`;\n\nexport const SmileCorner = styled.div`\n\twidth: 10px;\n\theight: 30px;\n\tbackground: ${({ theme }) => theme.dark};\n\tborder-radius: 100px/160px;\n\t-webkit-border-radius: 100px 160px;\n\t-moz-border-radius: 100px/160px;\n\tposition: absolute;\n\ttop: -12px;\n\t-webkit-transform: rotate(65deg);\n\t-moz-transform: rotate(65deg);\n\tleft: -12px;\n`;\n\nexport const SmileCornerRight = styled(SmileCorner)`\n\tleft: 180px;\n\t-webkit-transform: rotate(-65deg);\n\t-moz-transform: rotate(-65deg);\n\ttransform: rotate(-65deg);\n`;\n\nexport const Smile = (\n\t<SmileBase>\n\t\t<SmileCorner />\n\t\t<SmileCornerRight />\n\t</SmileBase>\n);\n\nexport const SmileyFace = styled.div`\n\twidth: 300px;\n\theight: 300px;\n\tposition: relative;\n\tborder-radius: 50%;\n\t-webkit-border-radius: 50%;\n\t-moz-border-radius: 50%;\n\tdisplay: block;\n\tanimation: spin 3s linear infinite;\n`;\n\nexport const Smiley = (\n\t<SmileyFace>\n\t\t{SmileyEyes}\n\t\t{Smile}\n\t</SmileyFace>\n);\n","import styled from 'styled-components';\n\nexport const StickyTopNav = styled.nav`\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 64px;\n\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: flex-end;\n\tpadding: 0 60px;\n`;\n\nexport const NavHeader = styled.h4`\n\ttext-decoration: underline;\n\tcolor: ${({ theme }) => theme.text};\n\tmargin: 0;\n\tcursor: pointer;\n`;\n","import React from 'react';\nimport { StickyTopNav, NavHeader } from './topnav.styled';\n\nfunction TopNav() {\n\treturn (\n\t\t<StickyTopNav>\n\t\t\t<NavHeader>blog</NavHeader>\n\t\t</StickyTopNav>\n\t);\n}\n\nexport default TopNav;\n","import styled from 'styled-components';\n\nexport const PaddedHeader = styled.h1`\n\tpadding-bottom: 0.6rem;\n\tcolor: ${({ theme }) => theme.text};\n`;\n","import React from 'react';\nimport { PaddedHeader } from './header.styled';\n\nfunction Header({ children }) {\n\treturn (\n\t\t<div>\n\t\t\t<PaddedHeader>{children}</PaddedHeader>\n\t\t</div>\n\t);\n}\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const SpacedSubtitle = styled.h6`\n\tline-height: 2.2;\n\tcolor: ${({ theme }) => theme.text};\n`;\n","import React from 'react';\nimport { SpacedSubtitle } from './subtitle.styled';\n\nfunction Subtitle({ children }) {\n\treturn (\n\t\t<div>\n\t\t\t<SpacedSubtitle>{children}</SpacedSubtitle>\n\t\t</div>\n\t);\n}\n\nexport default Subtitle;\n","import styled from 'styled-components';\n\nconst SubtleLink = styled.a`\n\ttext-decoration: underline;\n\tcursor: pointer;\n\tcolor: ${({ theme }) => theme.text};\n\n\t&:hover {\n\t\tcolor: ${({ theme }) => theme.text};\n\t}\n`;\n\nexport default SubtleLink;\n","import styled from 'styled-components';\n\nconst PaddedDiv = styled.div`\n\tpadding: 2.5rem;\n`;\n\nexport default PaddedDiv;\n","import styled from 'styled-components';\n\nexport const ThemeToggle = styled.div`\n\tborder-radius: 50%;\n\tz-index: 10;\n\tbackground-color: ${({ theme }) => theme.inversePrimary};\n\tposition: absolute;\n\tbottom: 50px;\n\tright: 50px;\n\theight: 36px;\n\twidth: 36px;\n\tpadding: 5px;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\n\ttransition: background-color linear 1.5s;\n`;\n","import React from 'react';\nimport { ThemeToggle } from './fab.styled';\n\nconst Moon = () => <>&#x1F319;</>;\nconst Sun = () => <>&#x1F31E;</>;\n\nfunction FAB({ darkMode, ...rest }) {\n\treturn <ThemeToggle {...rest}>{darkMode ? <Sun /> : <Moon />}</ThemeToggle>;\n}\n\nexport default FAB;\n","export const theme = {\n\tdark: {\n\t\ttext: '#fffff2',\n\t\tprimary: '#0d0d0d',\n\t\tinversePrimary: '#fffff2',\n\t\tshadowLight: 'rgba(255,255,255,0.5)',\n\t\tshadowDark: 'rgba(209,205,199,0.5)',\n\t},\n\tlight: {\n\t\ttext: '#0d0d0d',\n\t\tprimary: '#fffff2',\n\t\tinversePrimary: '#0d0d0d',\n\t\tshadowLight: 'rgba(255,255,255,0.5)',\n\t\tshadowDark: 'rgba(209,205,199,0.5)',\n\t},\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport {\n\tMaxHeightFluidContainer,\n\tBackground,\n\tNeuSmiley,\n\tHeader,\n\tSubtitle,\n\tSubtleLink,\n\tPaddedDiv,\n\tFAB,\n\tTopNav,\n} from './components';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { theme } from './theme';\nimport { ThemeProvider } from 'styled-components';\n\nconst NeuBackground = () => {\n\treturn (\n\t\t<Background>\n\t\t\t<NeuSmiley height='300px' width='300px' />\n\t\t</Background>\n\t);\n};\n\nfunction App() {\n\tconst [darkMode, setDarkMode] = useState(false);\n\tconst [statefulTheme, setTheme] = useState(theme.light);\n\n\tuseEffect(() => setTheme(theme[darkMode ? 'dark' : 'light']), [darkMode]);\n\n\treturn (\n\t\t<ThemeProvider theme={statefulTheme}>\n\t\t\t<Router>\n\t\t\t\t<MaxHeightFluidContainer>\n\t\t\t\t\t<TopNav />\n\t\t\t\t\t<PaddedDiv>\n\t\t\t\t\t\t<Header>Hey, I'm Liam.</Header>\n\t\t\t\t\t\t<Subtitle>\n\t\t\t\t\t\t\tI'm a product-minded engineer.\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\tI'm working at evervault to make data privacy simple and\n\t\t\t\t\t\t\taccessible for all.\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\tIf that sounds like something that would interest you, check out\n\t\t\t\t\t\t\tour{' '}\n\t\t\t\t\t\t\t<SubtleLink target='_blank' href='https://evervault.com/careers'>\n\t\t\t\t\t\t\t\tcareers page\n\t\t\t\t\t\t\t</SubtleLink>\n\t\t\t\t\t\t\t.\n\t\t\t\t\t\t</Subtitle>\n\t\t\t\t\t</PaddedDiv>\n\t\t\t\t\t<FAB onClick={() => setDarkMode(!darkMode)} darkMode={darkMode} />\n\t\t\t\t</MaxHeightFluidContainer>\n\t\t\t</Router>\n\t\t</ThemeProvider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}